#*
 * Copyright 2015 Geert Claeys
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
#parse("/com/tecnyse/integration/template/bridge_macros.vm")
#ifndef ${proxyClass.header}
\#define ${proxyClass.header}

\#include <jni.h>
\#include <string>

\#include <com/tecnyse/integration/static_init.h>

#foreach( $dependency in $proxyClass.dependencies)
\#include <${dependency.includeName}>
#end

#foreach( $packageName in $proxyClass.packageNames )
namespace $packageName {
#end

class $proxyClass.className {

    static jclass java_class;
    jobject object_instance;

protected:
#foreach( $method in $proxyClass.methods )
    static jmethodID ${method.uniqueName}_id;
#end

public:
#foreach($method in $proxyClass.methods)
    virtual $method.returnType.typeName ${method.name}(#foreach( $param in $method.parameters ) ${param.type.typeName} ${param.name}#commaIfNeeded($velocityCount $method.parameters)#end );
#end

    static static_init_helper init_helper;
    static void initJNI();
};


#foreach( $packageName in $proxyClass.packageNames )
}
#end

#endif
